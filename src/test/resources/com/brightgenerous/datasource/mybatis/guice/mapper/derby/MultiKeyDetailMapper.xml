<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.brightgenerous.datasource.mybatis.guice.mapper.derby.MultiKeyDetailMapper">

	<select id="selectSize" resultType="long">
		<bind name="methods" value="@com.brightgenerous.orm.mapper.MapperMethods@get('t_multi_key_detail')" />
		<bind name="propertys" value="condition.forUpdate ? {} : { 'header' }" />

		select
			count(*)

		<include refid="sqlFromWhere" />
	</select>

	<select id="selectAll" resultType="MultiKeyDetail">
		<bind name="methods" value="@com.brightgenerous.orm.mapper.MapperMethods@get('t_multi_key_detail')" />
		<bind name="propertys" value="condition.forUpdate ? {} : { 'header' }" />

		select
			<foreach index="key" item="column" separator=","
					collection="methods.filterSelects(propertys)">
				${column} as "${key}"
			</foreach>

		<include refid="sqlFromWhere" />

		<trim prefix="order by">
			<foreach index="key" item="asc" separator=","
					collection="methods.filterSorts(condition.sorts, propertys)">
				${key}
				<choose>
					<when test="asc">asc</when>
					<otherwise>desc</otherwise>
				</choose>
			</foreach>
		</trim>

		<if test="condition.offset neq null">
			offset ${condition.offset} rows
		</if>
		<if test="condition.limit neq null">
			fetch next ${condition.limit} rows only
		</if>

		<if test="condition.forUpdate">
			for update
		</if>
	</select>

	<sql id="sqlFromWhere">
		from
			t_multi_key_detail

		<if test="methods.contains(propertys, 'header')">
			inner join
				t_header
			on
				t_header.header_no = t_multi_key_detail.header_no
		</if>

		<where>
			<foreach index="key" item="field"
					collection="methods.filterFields(condition.fields, propertys)">
				<if test="field.value neq null">
					and ${key} = #{field.value}
				</if>
				<if test="field.notValue neq null">
					and ${key} &lt;&gt; #{field.notValue}
				</if>
				<if test="field.isNull">
					and ${key} is null
				</if>
				<if test="field.isNotNull">
					and ${key} is not null
				</if>
				<if test="field.prefixValue neq null">
					and ${key} like #{field.prefixValue} || '%'
				</if>
				<if test="field.notPrefixValue neq null">
					and ${key} not like #{field.notPrefixValue} || '%'
				</if>
				<if test="field.suffixValue neq null">
					and ${key} like '%' || #{field.suffixValue}
				</if>
				<if test="field.notSuffixValue neq null">
					and ${key} not like '%' || #{field.notSuffixValue}
				</if>
				<if test="field.broadValue neq null">
					and ${key} like '%' || #{field.broadValue} || '%'
				</if>
				<if test="field.notBroadValue neq null">
					and ${key} not like '%' || #{field.notBroadValue} || '%'
				</if>
				<if test="field.lowerThanValue neq null">
					and ${key} &lt; #{field.lowerThanValue}
				</if>
				<if test="field.lowerEqualValue neq null">
					and ${key} &lt;= #{field.lowerEqualValue}
				</if>
				<if test="field.greaterThanValue neq null">
					and ${key} &gt; #{field.greaterThanValue}
				</if>
				<if test="field.greaterEqualValue neq null">
					and ${key} &gt;= #{field.greaterEqualValue}
				</if>
			</foreach>
		</where>
	</sql>

	<insert id="insert">
		<bind name="methods" value="@com.brightgenerous.orm.mapper.MapperMethods@get('t_multi_key_detail')" />

		<selectKey keyProperty="bean.detailNo" resultType="Long" order="BEFORE">
			select coalesce(max(detail_no),0)+1 from t_multi_key_detail where header_no = #{bean.header.headerNo, jdbcType=BIGINT}
		</selectKey>

		insert into
			t_multi_key_detail (
				<foreach index="key" item="value" separator=","
						collection="methods.filterInserts(bean)">
					${key}
				</foreach>
			) values (
				<foreach index="key" item="value" separator=","
						collection="methods.filterInserts(bean)">
					<choose><when test="value.value neq null">#{value.value}</when><otherwise>null</otherwise></choose>
				</foreach>
			)
	</insert>

	<update id="update">
		<bind name="methods" value="@com.brightgenerous.orm.mapper.MapperMethods@get('t_multi_key_detail')" />

		update
			t_multi_key_detail

		set
			<foreach index="key" item="value" separator=","
					collection="methods.filterUpdates(bean)">
				${key} = <choose><when test="value.value neq null">#{value.value}</when><otherwise>null</otherwise></choose>
			</foreach>

		where
			<foreach index="key" item="value" separator="and"
					collection="methods.filterPrimarys(bean)">
				${key} = <choose><when test="value.value neq null">#{value.value}</when><otherwise>null</otherwise></choose>
			</foreach>
	</update>

	<delete id="delete">
		<bind name="methods" value="@com.brightgenerous.orm.mapper.MapperMethods@get('t_multi_key_detail')" />

		delete from
			t_multi_key_detail

		where
			<foreach index="key" item="value" separator="and"
					collection="methods.filterPrimarys(bean)">
				${key} = <choose><when test="value.value neq null">#{value.value}</when><otherwise>null</otherwise></choose>
			</foreach>
	</delete>

	<delete id="deleteByHeader">
		delete from
			t_multi_key_detail

		where
			header_no = #{headerNo, jdbcType=BIGINT}
	</delete>

</mapper>
